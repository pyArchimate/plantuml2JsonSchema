start: "@startuml" (_skinparam | package | _class | relationship | enum | comment)* "@enduml"

// _Skinparam
_skinparam: "skinparam" sparam svalue
         | "hide" sparam
         | "show" sparam

// Comment
comment: "'" /\s+.*/
        | "/'" /\s+[\d\w:\-$!?"#&%()+,.\/;<=>@\^_`{}|~\[\] \n]*/ "'/"

// Package
package: "package" CNAME ("as" alias)? "{" (_class | enum | relationship | comment | note)* "}"

// Classes
_class: "class" class_name ("as" alias)? stereotype? ("{" (comment? _class_group_title? (attribute | method) _class_group_title?)* "}")?
     | class_name ":" (attribute | method)? comment?

// alias
alias: /"[a-zA-Z0-9-_() ]*"/

//Enum
enum: "enum" class_name ("{" (comment? CNAME)+ "}")?

// Stereotype
stereotype: "<<" stereotype_name ">>"

// Sections with title
_class_group_title: ".." (group_title "..")?
                 | "--" (group_title "--")?
                 | "__" (group_title "__")?
                 | "=="

// Variables
variable: var ":" type
        | var ":" type "[]"
        | var ":" type "*"
        | type var
        | type "[]" var
        | type "*" var
        | type
        | var

text_field: "{field}" field_text

?attribute: att_scope? visibility? variable comment?
          | visibility? att_scope? variable comment?
          | att_scope? visibility? text_field comment?
          | visibility? att_scope? text_field comment?

param_list: [variable ("," variable)*]

function: method_name "(" param_list ")" ":" type
        | type method_name "(" param_list ")"

text_method: "{method}" method_text

method: att_scope? visibility? function
      | visibility? att_scope? function
      | att_scope? visibility? text_method
      | visibility? att_scope? text_method

// Attribute Scope
att_scope: "{static}" -> static
         | "{abstract}" -> abstract

// Relationships
relationship: arrow_end_1? cardinality? arrow_head_1? arrow_body arrow_head_2? cardinality? arrow_end_2? [":" relation_text] comment?

// Arrow Heads
!arrow_head_1: "<"
             | "<|"
             | "*"
             | "o"
             | "+"
             | "#"
             | "x"
             | "}"
             | "^"
             | " "

!arrow_head_2: ">"
             | "|>"
             | "*"
             | "o"
             | "+"
             | "#"
             | "x"
             | "{"
             | "^"
             | " "

!arrow_body: ("-"
           | "--"
           | "---"
           | "-left-"
           | "-up-"
           | "-right-"
           | "-down-"
           | "."
           | ".."
           | ".left."
           | ".up."
           | ".right."
           | ".down." )

cardinality: ESCAPED_STRING

// Note
note: "note" ("as" CNAME)? /.+/ "end note"


// Variables and Methods visibility
visibility: "+" -> public
          | "-" -> private
          | "#" -> protected
          | "~" -> package

arrow_end_1: CNAME
arrow_end_2: CNAME
type: CNAME
var: CNAME
sparam: CNAME
svalue: CNAME|WORD|ESCAPED_STRING|DIGIT
attribute_name: CNAME
method_name: CNAME
class_name: CNAME
          | CNAME "." CNAME
stereotype_name: CNAME
relation_text: (WORD|ESCAPED_STRING|DIGIT|">"|"<")*
field_text: (WORD|ESCAPED_STRING|DIGIT)*
method_text: (WORD|ESCAPED_STRING|DIGIT)*
_class_mem_text: (WORD|ESCAPED_STRING|DIGIT)*
group_title: (WORD|ESCAPED_STRING|DIGIT)*

%import common.CNAME
%import common.ESCAPED_STRING
%import common.WORD
%import common.DIGIT
%import common.WS
%ignore WS

